"use strict";var ApplicationConfiguration=function(){var applicationModuleName="Redingote",applicationModuleVendorDependencies=["ngResource","ngMessages","ngAria","ngMaterial","ngAnimate","toastr","ui.router","ui.bootstrap","ui.utils","satellizer","ngStorage","ngIdle","angulartics","angulartics.google.analytics","infinite-scroll","pascalprecht.translate"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}(),version="0.0.0";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module("infinite-scroll").value("THROTTLE_MILLISECONDS",150),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.module(ApplicationConfiguration.applicationModuleName).config(["$mdThemingProvider","$mdIconProvider",function($mdThemingProvider,$mdIconProvider){$mdThemingProvider.theme("default").primaryPalette("light-blue",{})}]),angular.module(ApplicationConfiguration.applicationModuleName).provider("configService",function(){var options={};this.config=function(opt){angular.extend(options,opt)},this.$get=[function(){if(!options)throw new Error("config options must be configured");return options}]}),angular.element(document).ready(function(){$.get("env.json",function(configData){console.log("env.json coming"),angular.module(ApplicationConfiguration.applicationModuleName).config(["configServiceProvider",function(configServiceProvider){"localhost"==window.location.href.substring(7,16)&&(configData.local=!0),configServiceProvider.config(configData)}]),console.log("initializing!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])})}),angular.module(ApplicationConfiguration.applicationModuleName).run(["$http","$httpBackend",function($http,$httpBackend){$http.defaults.headers.common["Content-Type"]="application/json; charset=utf-8",$http.defaults.headers.post["Content-Type"]="application/json; charset=utf-8",$http.defaults.headers.common["X-Requested-With"]="XMLHttpRequest"}]),ApplicationConfiguration.registerModule("accueil"),angular.module("accueil").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){var state=$injector.get("$state");return state.go("accueil"),$location.path()}),$stateProvider.state("accueil",{url:"/",templateUrl:"modules/accueil/views/accueil.view.html"})}]),angular.module("accueil").controller("HomeController",["$scope","$sessionStorage","$location","$auth",function($scope,$sessionStorage,$location,$auth){$scope.$storage=$sessionStorage.$default({me:[],clinicInfo:{},medications:[],api:{},buildWebNumber:""}),$scope.authentication=function(){return $auth.isAuthenticated()},$scope.authentication||$location.path("/signin")}]),angular.module("accueil").controller("AccueilController",["$scope","$state",function($scope,$state){$scope.goToPartie=function(id){$state.go("partie",{joueur:id})}}]),ApplicationConfiguration.registerModule("attaques"),angular.module("attaques").controller("AttaquesContainerController",["$scope","Cartes","Attaques",function($scope,Cartes,Attaques){$scope.chooseJoueur=function(id){$scope.attaque.cible=id},$scope.cancelAttaque=function(){$scope.attaque.active=!1,$scope.attaque.cible=-1,$scope.attaque.carte={},$scope.attaque.carteIndex=-1},$scope.lanceAction=function(){var carte=$scope.attaque.carte;console.log(carte),Cartes.moveCartes({carteIds:[carte.id],position:-2}).success(function(){Attaques.add({categorie:"attaque",type:"action",carte:carte.id,cible:$scope.attaque.cible,source:$scope.joueurId}),$scope.defausses.pioche.push(carte),$scope.jeu.main.splice($scope.attaque.carteIndex,1),console.log($scope.jeu.main),$scope.cancelAttaque()}).error(function(){})}}]),angular.module("attaques").controller("AttaquesDefenseContainerController",["$scope","Cartes","Attaques","Partie","Joueurs","AttaquesDefenseService","PartieTourService",function($scope,Cartes,Attaques,Partie,Joueurs,AttaquesDefenseService,PartieTourService){$scope.toursToSkip=0,$scope.removeCarte=function(index){$scope.defense.cartes_jeter[index].filled=!1,$scope.defense.cartes_jeter_filled--,$scope.defense.canProceed=!1},$scope.finishDefense=function(){if("action"==$scope.defense.type){var action=$scope.defense.action;if("tour_passe"==action.types[0])$scope.toursToSkip++;else if("cartes_perte"==action.types[0])for(var i in $scope.defense.cartes_jeter)if($scope.defense.cartes_jeter[i].filled){for(var index=-1,j=0;index<0&&j<$scope.jeu.main.length;)$scope.jeu.main[j].id==$scope.defense.cartes_jeter[i].id&&(index=j),j++;Cartes.moveCartes({carteIds:[$scope.defense.cartes_jeter[i].id],position:-2}).success(function(){var carte=$scope.jeu.main[index];carte.main={},$scope.defausses.pioche.push(carte),$scope.jeu.main.splice(index,1),$scope.focusIndex=-2}).error(function(){})}}$scope.defense.remainingSteps<=0&&(Attaques.delete({id:$scope.defense.id}),$scope.defense.active=!1,$scope.attaques.defenses.length>0?AttaquesDefenseService.startDefense($scope):$scope.toursToSkip>0&&PartieTourService.moveTour($scope,7,$scope.toursToSip-1))}}]),angular.module("attaques").directive("redAttaquesContainer",[function(){return{templateUrl:"modules/attaques/views/attaques-container.view.html",restrict:"E"}}]),angular.module("attaques").directive("redAttaquesDefenseContainer",[function(){return{templateUrl:"modules/attaques/views/attaques-defense-container.view.html",restrict:"E"}}]),angular.module("attaques").factory("Attaques",["$http","configService",function($http,configService){return{add:function(params){return $http(configService.local?{method:"GET",url:"modules/joueurs/json/joueurs.json"}:{method:"POST",url:"modules/attaques/php/attaques-add.php",params:params,headers:{"Cache-Control":"max-age=0, no-cache, no-store, must-revalidate","Content-Type":"application/json"}})},get:function(params){return $http(configService.local?{method:"GET",url:"modules/attaques/json/attaques.json"}:{method:"GET",url:"modules/attaques/php/attaques-get.php",params:params,headers:{"Cache-Control":"max-age=0, no-cache, no-store, must-revalidate","Content-Type":"application/json"}})},delete:function(params){return $http(configService.local?{method:"GET",url:"modules/attaques/json/attaques.json"}:{method:"POST",url:"modules/attaques/php/attaques-delete.php",params:params,headers:{"Cache-Control":"max-age=0, no-cache, no-store, must-revalidate","Content-Type":"application/json"}})}}}]),angular.module("attaques").service("attaquesActions",["$mdDialog","Cartes",function($mdDialog,Cartes){function addAttaqueDescription(scope,action){var description="";"cartes_perte"==action.types[0]?description="perd "+action.valeur+" cartes !":"tour_passe"==action.types[0]?description="passe "+action.valeur+" tour !":"cartes_perte_test"==action.types[0]&&(description="risque de perdre "+action.valeur+" cartes !"),scope.attaque.description=description}var attaquesActionsFunctions={};return attaquesActionsFunctions.utiliser=function(scope,carte){scope.attaque.active=!0,scope.attaque.categorie="action",scope.attaque.carte=carte,addAttaqueDescription(scope,carte.action)},attaquesActionsFunctions}]),angular.module("attaques").service("AttaquesDefenseService",["Cartes",function(Cartes){function implementDefense($scope){var description="",defense=$scope.defense;if("action"==defense.type){var carteId=defense.carte,action=$scope.cartes[carteId].action;if($scope.defense.action=action,console.log($scope.cartes),console.log(carteId),console.log($scope.defense.action.types[0]),"cartes_perte"==action.types[0]){$scope.defense.remainingSteps=0,$scope.defense.cartes_jeter=[{filled:!1},{filled:!1}],$scope.defense.cartes_jeter_filled=0,$scope.defense.cartes_jeter_total=action.valeur;var cartesJetables=0;for(var i in $scope.jeu.main)$scope.jeu.main[i].injetable||cartesJetables++;cartesJetables<action.valeur&&($scope.defense.cartes_jeter_total=cartesJetables),$scope.partie.dispo.cartes.main_jeter_attaque=!0,description=1==action.valeur?"Choisis "+action.valeur+" carte à défausser :":"Choisis "+action.valeur+" cartes à défausser :"}else"cartes_perte_test"==action.types[0]?($scope.defense.remainingSteps=1,description=1==action.valeur?"Tu passes "+action.valeur+" tour":"Tu passes "+action.valeur+" tour"):"tour_passe"==action.types[0]&&($scope.defense.canProceed=!0,$scope.defense.remainingSteps=0,description=1==action.valeur?"Tu passes "+action.valeur+" tour":"Tu passes "+action.valeur+" tour")}$scope.defense.description=description,console.log($scope.defense)}var attaquesDefenseFunctions={};return attaquesDefenseFunctions.startDefense=function($scope){$scope.partie.tour_joueur==$scope.joueurId&&0==$scope.partie.tour_action&&($scope.defense.id=$scope.attaques.defenses[0].id,$scope.defense.type=$scope.attaques.defenses[0].type,$scope.defense.categorie=$scope.attaques.defenses[0].categorie,$scope.defense.carte=$scope.attaques.defenses[0].carte,$scope.defense.source=$scope.attaques.defenses[0].source,$scope.defense.canProceed=!1,$scope.defense.active=!0,$scope.attaques.defenses.splice(0,1),implementDefense($scope))},attaquesDefenseFunctions.jeterCarte=function($scope,id){var carteJetee=!1;for(var i in $scope.defense.cartes_jeter)$scope.defense.cartes_jeter[i].id==id&&(carteJetee=!0);if(!carteJetee)for(var foundSpot=!1,i=0,cartesAJeter=$scope.defense.cartes_jeter.length;i<cartesAJeter&&!foundSpot;)$scope.defense.cartes_jeter[i].filled||(console.log($scope.defense.cartes_jeter),$scope.defense.cartes_jeter[i]=$scope.cartes[id],$scope.defense.cartes_jeter[i].filled=!0,foundSpot=!0,$scope.defense.cartes_jeter_filled++),$scope.defense.cartes_jeter_total==$scope.defense.cartes_jeter_filled&&($scope.defense.canProceed=!0),i++},attaquesDefenseFunctions}]),ApplicationConfiguration.registerModule("cartes"),angular.module("cartes").controller("CartesPiocheController",["$scope","$mdDialog","Cartes",function($scope,$mdDialog,Cartes){function carteSelection(){var carteOrder=Math.floor(Math.random()*$scope.pioches.pioche.length);Cartes.moveCartes({carteIds:[$scope.pioches.pioche[carteOrder].id],position:$scope.joueurId}).success(function(){var carte=$scope.pioches.pioche[carteOrder],piocheCartePopup=$mdDialog.confirm({templateUrl:"modules/cartes/views/cartes-pioche-popup.view.html",clickOutsideToClose:!0,controller:function($scope){$scope.image="modules/cartes/img/pioche/cartes_pioche_"+carte.id+".png";var flipped=!1;$scope.flip=function(){"objet"==carte.categorie&&(flipped?($scope.image="modules/cartes/img/pioche/cartes_pioche_"+carte.id+".png",flipped=!1):($scope.image="modules/cartes/img/pioche/cartes_pioche_"+carte.id+"_flipped.png",flipped=!0))}}});$mdDialog.show(piocheCartePopup),$scope.jeu.main.push($scope.pioches.pioche[carteOrder]),$scope.pioches.pioche.splice(carteOrder,1),$scope.pioches.pioche.length<=0&&$scope.defausses.pioche.length>0&&retournement(),$scope.piochesDisponibles=!0,$scope.partie.dispo.pioches.pioche--}).error(function(){$scope.piochesDisponibles=!0})}function retournement(pioche){console.log("retourning");var ids=[];for(var i in $scope.defausses.pioche)ids.push($scope.defausses.pioche[i].id);Cartes.moveCartes({carteIds:ids,position:-1}).success(function(){for(var i in $scope.defausses.pioche)$scope.pioches.pioche.push($scope.defausses.pioche[i]);$scope.defausses.pioche=[]}),pioche&&carteSelection()}$scope.piochesDisponibles=!0,$scope.cartePioche=function(){if($scope.piochesDisponibles=!1,$scope.pioches.pioche.length>0||$scope.defausses.pioche.length>0)$scope.pioches.pioche.length<=0?retournement(!0):carteSelection();else{var piocheCartePopup=$mdDialog.confirm({templateUrl:"modules/core/views/core-warning-popup.view.html",clickOutsideToClose:!0,controller:function($scope){$scope.message="La pioche est vide"}});$mdDialog.show(piocheCartePopup),$scope.partie.dispo.pioches.pioche--,$scope.piochesDisponibles=!0}},$scope.carteQuestion=function(){var poseur=Math.floor(3*Math.random()),poseurNoms=["Julia","Marie","Romain"],poseurTextes=["J'espère que tu connais les lois américaines stupides !","Easy !","J'espère que tu es très cultivé !"],piocheQuestionPopup=$mdDialog.confirm({templateUrl:"modules/cartes/views/cartes-questions-pioche-popup.view.html",clickOutsideToClose:!0,controller:function($scope,$mdDialog){$scope.poseur=poseurNoms[poseur],$scope.texte=poseurTextes[poseur],$scope.popupConfirm=function(){$mdDialog.hide()}}});$mdDialog.show(piocheQuestionPopup).then(function(){})}}]),angular.module("cartes").factory("Cartes",["$http","configService",function($http,configService){return{getCartes:function(){return $http(configService.local?{method:"GET",url:"modules/cartes/json/cartes.json"}:{method:"GET",url:"modules/cartes/php/cartes.php",headers:{"Cache-Control":"no-cache"}})},moveCartes:function(params){if(configService.local)return $http({method:"GET",url:"modules/cartes/json/cartes.json"});var phpParams="";phpParams+="position="+params.position;for(var i in params.carteIds)phpParams+="&carteId[]="+params.carteIds[i];return console.log(phpParams),$http({method:"GET",url:"modules/cartes/php/cartes-move.php?"+phpParams,headers:{"Cache-Control":"max-age=0, no-cache, no-store, must-revalidate"}})},changementMain:function(params){return $http(configService.local?{method:"GET",url:"modules/cartes/json/cartes.json"}:{method:"POST",url:"modules/cartes/php/cartes-changement-main.php",params:{carteId:params.carteId,main:params.main},headers:{"Cache-Control":"max-age=0, no-cache, no-store, must-revalidate"}})}}}]),angular.module("cartes").service("cartesQuestionsPioche",["$mdDialog",function($mdDialog){var questionsPiocheFunctions={};return questionsPiocheFunctions.pioche=function(){var poseur=Math.floor(3*Math.random()),poseurNoms=["Julia","Marie","Romain"],poseurTextes=["J'espère que tu connais les lois américaines stupides !","Easy !","J'espère que tu es très cultivé !"],piocheQuestionPopup=$mdDialog.confirm({templateUrl:"modules/cartes/views/cartes-questions-pioche-popup.view.html",clickOutsideToClose:!0,controller:function($scope,$mdDialog){$scope.poseur=poseurNoms[poseur],$scope.texte=poseurTextes[poseur],$scope.popupConfirm=function(){$mdDialog.hide()}}});$mdDialog.show(piocheQuestionPopup).then(function(){})},questionsPiocheFunctions}]),ApplicationConfiguration.registerModule("des"),angular.module("des").controller("DesContainerController",["$scope",function($scope){function translateResult(de,result){"rhombo"==de&&($scope.partie.dispo.pioches.pioche+=result)}var des_size={rhombo:6,paysage:12,echecs:6,duel:20,labyrinthe:4},des_options={rhombo:[0,0,0,1,1,2],paysage:[2,3,4,5,5,7,7,12,16,73],echecs:["Tour","Dame","Dada","Fou","Roi","Stop"],duel:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],labyrinthe:[1,2,3,4]};$scope.lanceDe=function(de){var rand=Math.floor(Math.random()*des_size[de]);$scope.jeu.de=des_options[de][rand],$scope.partie.dispo.des[de]--,translateResult(de,des_options[de][rand])}}]),angular.module("des").directive("redDesContainer",[function(){return{templateUrl:"modules/des/views/des-container.view.html",restrict:"E"}}]),ApplicationConfiguration.registerModule("jeu"),angular.module("jeu").controller("JeuContainerController",["$scope",function($scope){$scope.actionsDisponibles={action:!0,nextAction:!0}}]),angular.module("jeu").controller("JeuMainController",["$scope","$timeout","Cartes","attaquesActions","AttaquesDefenseService",function($scope,$timeout,Cartes,attaquesActions,AttaquesDefenseService){$scope.focusIndex=-2,$scope.focusCarte=function(index){index==$scope.focusIndex?$scope.focusIndex=-2:$scope.focusIndex=index},$scope.utiliserCarte=function(index){var carte=$scope.jeu.main[index];"action"==carte.categorie&&($scope.attaque.carteIndex=index,attaquesActions.utiliser($scope,carte))},$scope.ouvrirCarte=function(index){var carte=$scope.jeu.main[index];carte.main.ouverte=!0,Cartes.changementMain({carteId:$scope.jeu.main[index].id,main:carte.main}).success(function(){$timeout(function(){$scope.jeu.ouvertes.push(carte)},250),$scope.jeu.main.splice(index,1),$scope.focusIndex=-2}).error(function(){})},$scope.jeterCarte=function(index){Cartes.moveCartes({carteIds:[$scope.jeu.main[index].id],position:-2}).success(function(){var carte=$scope.jeu.main[index];carte.main={},$scope.defausses.pioche.push(carte),$scope.jeu.main.splice(index,1),$scope.focusIndex=-2}).error(function(){})},$scope.jeterAttaqueCarte=function(index){AttaquesDefenseService.jeterCarte($scope,$scope.jeu.main[index].id)}}]),angular.module("jeu").controller("JeuOuvertesController",["$scope","Cartes",function($scope,Cartes){$scope.focusIndex=-2,$scope.focusCarte=function(index){index==$scope.focusIndex?$scope.focusIndex=-2:$scope.focusIndex=index},$scope.jeterCarte=function(index){Cartes.moveCartes({carteIds:[$scope.jeu.ouvertes[index].id],position:-2}).success(function(){var carte=$scope.jeu.ouvertes[index];carte.main={},$scope.defausses.pioche.push(carte),$scope.jeu.ouvertes.splice(index,1),$scope.focusIndex=-2}).error(function(){})}}]),angular.module("jeu").directive("redJeuContainer",[function(){return{templateUrl:"modules/jeu/views/jeu-container.view.html",restrict:"E"}}]),angular.module("jeu").directive("redJeuMain",[function(){return{templateUrl:"modules/jeu/views/jeu-main.view.html",restrict:"E"}}]),angular.module("jeu").directive("redJeuOuvertes",[function(){return{templateUrl:"modules/jeu/views/jeu-ouvertes.view.html",restrict:"E"}}]),ApplicationConfiguration.registerModule("joueurs"),angular.module("joueurs").controller("JoueursRecapController",["$scope",function($scope){console.log($scope.autresJoueurs),$scope.joueurLeftStyle="{'background-color': '"+$scope.joueurs[$scope.joueurLeft].backgroundColor+"'}",$scope.joueurRightStyle="{'background-color': '"+$scope.joueurs[$scope.joueurRight].backgroundColor+"'}"}]),angular.module("joueurs").directive("redJoueursRecapLeft",[function(){return{templateUrl:"modules/joueurs/views/joueurs-recap-left.view.html",restrict:"E"}}]),angular.module("joueurs").directive("redJoueursRecapRight",[function(){return{templateUrl:"modules/joueurs/views/joueurs-recap-right.view.html",restrict:"E"}}]),angular.module("joueurs").factory("Joueurs",["$http","configService",function($http,configService){return{getJoueurs:function(){return $http(configService.local?{method:"GET",url:"modules/joueurs/json/joueurs.json"}:{method:"GET",url:"modules/joueurs/php/joueurs.php",headers:{"Cache-Control":"no-cache"}})}}}]),ApplicationConfiguration.registerModule("partie"),angular.module("partie").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("partie",{url:"/partie/:joueur",templateUrl:"modules/partie/views/partie-general.view.html"})}]),angular.module("partie").controller("PartieGeneralController",["$scope","$state","$stateParams","Cartes","Partie","Joueurs","Attaques","AttaquesDefenseService",function($scope,$state,$stateParams,Cartes,Partie,Joueurs,Attaques,AttaquesDefenseService){function getAttaques(){$scope.loaded.joueurs&&$scope.loaded.cartes&&($scope.partie.tour_joueur==$scope.joueurId&&0==$scope.partie.tour_action?Attaques.get($scope.joueurId).success(function(response){for(var i in response)"attaque"==response[i].categorie?$scope.attaques.defenses.push(response[i]):"recompense"==response[i].categorie&&$scope.attaques.recompenses.push(response[i]),console.log($scope.attaques.defenses);$scope.loaded.defenses=!0,AttaquesDefenseService.startDefense($scope)}):$scope.loaded.defenses=!0)}function getCartes(){Cartes.getCartes().success(function(response){$scope.cartes={};for(var i in response){var carte=response[i];$scope.cartes[carte.id]=carte,"pioche"==carte.pile&&(carte.position==-2?$scope.defausses.pioche.push(carte):carte.position==-1?$scope.pioches.pioche.push(carte):carte.position==$scope.joueurId?carte.main.ouverte?$scope.jeu.ouvertes.push(carte):$scope.jeu.main.push(carte):carte.main.ouverte&&$scope.joueurs[carte.position].ouvertes.push(carte))}$scope.loaded.cartes=!0,getAttaques()}).error(function(response){console.log("Error while trying to get cartes")})}$scope.loaded={partie:!1,cartes:!1,joueurs:!1,defenses:!1},$scope.joueurId=$stateParams.joueur,$scope.attaques={defenses:[],recompenses:[]},$scope.defense={},Partie.getPartie().success(function(response){$scope.partie={tour_joueur:response[0].tour_joueur,tour_action:response[0].tour_action,tour_skip:response[0].tour_skip,tonalite:response[0].tonalite,temps:response[0].temps,dispo:response[0].dispo},getAttaques()}),$scope.resetDispos=function(){$scope.partie.dispo={des:{rhombo:0,paysage:0,duel:0,echecs:0,labyrinthe:0},pioches:{pioche:0,questions:0,humeurs:0,missions:0},cartes:{ouvertures:!1,main_jeter:!1,ouvertes_jeter:!1,utiliser:!1}}},$scope.jeu={},$scope.jeu.de=-1,$scope.jeu.main=[],$scope.jeu.ouvertes=[],$scope.joueurs={0:{},1:{},2:{}},$scope.joueur={},Joueurs.getJoueurs().success(function(response){var joueur=response[$scope.joueurId];$scope.joueur={id:joueur.id,nom:joueur.nom,diable:joueur.diable,belette:joueur.belette,notes_titre:joueur.notes_titre,notes:joueur.notes},$scope.joueurs[0]=response[0],$scope.joueurs[1]=response[1],$scope.joueurs[2]=response[2];for(var i in $scope.joueurs)$scope.joueurs[i].ouvertes=[];getCartes()}),$scope.autresJoueurs=[($scope.joueurId+2)%3,($scope.joueurId+1)%3],$scope.joueurLeft=($scope.joueurId+2)%3,$scope.joueurRight=($scope.joueurId+1)%3,$scope.pioches={},$scope.pioches.pioche=[],$scope.defausses={},$scope.defausses.pioche=[],$scope.plateau=-1,$scope.plateaux=[{id:"paysage",nom:"Plateau Paysage"},{id:"labyrinthe",nom:"Plateau Labyrinthe"},{id:"escalier",nom:"Plateau Escalier"}],$scope.goToPlateau=function(plateauId){$scope.plateau==plateauId?$scope.plateau=-1:$scope.plateau=plateauId},$scope.attaque={},$scope.actionsDisponibles={}}]),angular.module("partie").controller("PartieTourController",["$scope","Partie","PartieTourService",function($scope,Partie,PartieTourService){$scope.actionsDisponibles.nextAction=!0,$scope.tourActionNames={0:"Defense",1:"Ouverture",2:"Piochement",3:"Déplacement",4:"Action de case",5:"Duel",6:"Actions"},$scope.nextAction=function(){PartieTourService.moveTour($scope,1,0)}}]),angular.module("partie").factory("Partie",["$http","configService",function($http,configService){return{getPartie:function(){return $http(configService.local?{method:"GET",url:"modules/partie/json/partie.json"}:{method:"GET",url:"modules/partie/php/partie.php",headers:{"Cache-Control":"max-age=0, no-cache, no-store, must-revalidate"}})},changeTour:function(params){return $http(configService.local?{method:"GET",url:"modules/cartes/json/cartes.json"}:{method:"POST",url:"modules/partie/php/partie-tour-change.php",params:params,headers:{"Cache-Control":"max-age=0, no-cache, no-store, must-revalidate"}})}}}]),angular.module("partie").service("PartieTourService",["Partie",function(Partie){function startAction($scope,tourJoueur,tourAction){$scope.jeu.de=-1,$scope.resetDispos(),console.log("starting action : tourJoueur is "+tourJoueur),tourJoueur==$scope.joueurId&&(console.log(tourAction),1==tourAction?($scope.partie.dispo.cartes.ouvertures=!0,$scope.partie.dispo.cartes.ouvertes_jeter=!0):2==tourAction?($scope.partie.dispo.pioches.pioche++,$scope.partie.dispo.des.rhombo++,$scope.partie.dispo.cartes.main_jeter=!0):6==tourAction&&($scope.partie.dispo.cartes.utiliser=!0))}var PartieTourServiceFunctions={};return PartieTourServiceFunctions.moveTour=function($scope,numberTours,skipTours){$scope.actionsDisponibles.nextAction=!1,Partie.getPartie().success(function(response){var tourJoueur,tourAction,tourSkip;if(tourSkip=$scope.partie.tour_skip,tourSkip[$scope.joueurId]+=skipTours,$scope.partie.tour_action+numberTours>6){var joueurFound=!1;for(tourAction=0,tourJoueur=($scope.partie.tour_joueur+1)%3;!joueurFound;)tourSkip[tourJoueur]>0?(tourSkip[tourJoueur]--,tourJoueur=(tourJoueur+1)%3):joueurFound=!0}else tourAction=$scope.partie.tour_action+numberTours,tourJoueur=$scope.partie.tour_joueur;startAction($scope,tourJoueur,tourAction),Partie.changeTour({tour_joueur:tourJoueur,tour_action:tourAction,tour_skip:JSON.stringify(tourSkip),dispo:$scope.partie.dispo}).success(function(){$scope.partie.tour_joueur=tourJoueur,$scope.partie.tour_action=tourAction,$scope.actionsDisponibles.nextAction=!0}).error(function(){$scope.actionsDisponibles.nextAction=!0})}).error(function(){$scope.actionsDisponibles.nextAction=!0})},PartieTourServiceFunctions}]),ApplicationConfiguration.registerModule("plateaux"),angular.module("plateaux").controller("PlateauxGeneralController",["$scope","$state",function($scope,$state){}]),angular.module("plateaux").controller("PlateauxPaysageController",["$scope","$state","$stateParams",function($scope,$state,$stateParams){$scope.plateauPaysage=[];for(var i=0;i<14;i++){$scope.plateauPaysage.push({id:i,colonnes:[]});for(var j=0;j<24;j++){var numero=Math.floor(1e3*Math.random()+1),question=Math.random(),action=Math.random(),achat=Math.random(),paysagesNoms=["Desert","Ville","Foret","Marecage","Mer","Royaume des tenebres","Montagne","Village","Prairie"],paysageIndex=Math.floor(8*Math.random()),paysage2=Math.random();if(paysage2>.7)var paysageIndex2=Math.floor(8*Math.random()),zones=[paysagesNoms[paysageIndex],paysagesNoms[paysageIndex2]];else var zones=[paysagesNoms[paysageIndex]];$scope.plateauPaysage[i].colonnes.push({id:j,numero:numero,question:question>.7,zones:zones,action:action>.75,achat:achat>.6})}}$scope.selectedCase={clicked:!1,ligneId:-1,colonneId:-1},$scope.selectCase=function(ligneId,colonneId){$scope.selectedCase.ligneId==ligneId&&$scope.selectedCase.colonneId==colonneId?($scope.selectedCase.clicked=!1,$scope.selectedCase.ligneId=-1,$scope.selectedCase.colonneId=-1):($scope.selectedCase.clicked=!0,$scope.selectedCase.ligneId=ligneId,$scope.selectedCase.colonneId=colonneId)}}]),angular.module("plateaux").directive("redPlateauxPaysage",[function(){return{templateUrl:"modules/plateaux/views/plateaux-paysage.view.html",restrict:"E"}}]),angular.module("plateaux").directive("redPlateauxLabyrinthe",[function(){return{templateUrl:"modules/plateaux/views/plateaux-labyrinthe.view.html",restrict:"E"}}]),angular.module("plateaux").directive("redPlateauxEscalier",[function(){return{templateUrl:"modules/plateaux/views/plateaux-escalier.view.html",restrict:"E"}}]);
//# sourceMappingURL=application.min.js.map